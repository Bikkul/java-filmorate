CREATE TABLE IF NOT EXISTS users
(
    user_id   INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email     VARCHAR(50) NOT NULL,
    login     VARCHAR(20) NOT NULL,
    user_name VARCHAR(20) NOT NULL,
    birthday  DATE
);

CREATE TABLE IF NOT EXISTS friendships_status
(
    status_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    status    VARCHAR(16) NOT NULL
);

CREATE TABLE IF NOT EXISTS users_friends
(
    friend_id INT REFERENCES users (user_id) ON DELETE CASCADE,
    user_id   INT REFERENCES users (user_id) ON DELETE CASCADE,
    status_id INT REFERENCES friendships_status (status_id) ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS mpa_ratings
(
    mpa_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name   VARCHAR(10) NOT NULL
);

CREATE TABLE IF NOT EXISTS films
(
    film_id     INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name        VARCHAR(72)  NOT NULL,
    description VARCHAR(255) NOT NULL,
    releaseDate DATE,
    duration    INT,
    mpa_id      INT          REFERENCES mpa_ratings (mpa_id) ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS genres
(
    genre_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name     VARCHAR(32) NOT NULL
);

CREATE TABLE IF NOT EXISTS films_genres
(
    film_id  INT REFERENCES films (film_id) ON DELETE CASCADE,
    genre_id INT REFERENCES genres (genre_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS likes
(
    film_id INT REFERENCES films (film_id) ON DELETE CASCADE,
    user_id INT REFERENCES users (user_id) ON DELETE CASCADE
)